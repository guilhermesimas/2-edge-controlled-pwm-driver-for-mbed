# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN = 
PROJECT = RTOS_1
OBJECTS = ./mbed/targets/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM/startup_LPC17xx.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/sleep.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/can_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/analogin_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/pinmap.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/i2c_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/analogout_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/pwmout_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/us_ticker.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/spi_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/port_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/gpio_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/rtc_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/ethernet_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/gpio_irq_api.o ./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/serial_api.o ./mbed/targets/cmsis/TARGET_NXP/TARGET_LPC176X/system_LPC17xx.o ./mbed/targets/cmsis/TARGET_NXP/TARGET_LPC176X/cmsis_nvic.o ./mbed/common/semihost_api.o ./mbed/common/lp_ticker_api.o ./mbed/common/ticker_api.o ./mbed/common/wait_api.o ./mbed/common/us_ticker_api.o ./mbed/common/board.o ./mbed/common/assert.o ./mbed/common/rtc_time.o ./mbed/common/error.o ./mbed/common/gpio.o ./mbed/common/pinmap_common.o ./mbed/common/mbed_interface.o ./main.o ./mbed/common/retarget.o ./mbed/common/RawSerial.o ./mbed/common/TimerEvent.o ./mbed/common/SPISlave.o ./mbed/common/InterruptIn.o ./mbed/common/CAN.o ./mbed/common/Ethernet.o ./mbed/common/I2C.o ./mbed/common/LocalFileSystem.o ./mbed/common/Timeout.o ./mbed/common/I2CSlave.o ./mbed/common/FilePath.o ./mbed/common/SerialBase.o ./mbed/common/InterruptManager.o ./mbed/common/FileLike.o ./mbed/common/FileSystemLike.o ./mbed/common/CallChain.o ./mbed/common/Stream.o ./mbed/common/Timer.o ./mbed/common/SPI.o ./mbed/common/BusOut.o ./mbed/common/Ticker.o ./mbed/common/FileBase.o ./mbed/common/Serial.o ./mbed/common/BusInOut.o ./mbed/common/BusIn.o ./env/test_env.o ./TextLCD.o ./pwmdoubleout_api.o
SYS_OBJECTS = 
INCLUDE_PATHS = -I. -I./mbed -I./mbed/api -I./mbed/hal -I./mbed/targets -I./mbed/targets/hal -I./mbed/targets/hal/TARGET_NXP -I./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X -I./mbed/targets/hal/TARGET_NXP/TARGET_LPC176X/TARGET_MBED_LPC1768 -I./mbed/targets/cmsis -I./mbed/targets/cmsis/TARGET_NXP -I./mbed/targets/cmsis/TARGET_NXP/TARGET_LPC176X -I./mbed/targets/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM -I./mbed/common -I./rtos -I./rtos/TARGET_CORTEX_M -I./rtos/TARGET_LPC1768 -I./rtos/TARGET_LPC1768/TOOLCHAIN_GCC_ARM -I./env 
LIBRARY_PATHS = -L./rtos/TARGET_LPC1768/TOOLCHAIN_GCC_ARM 
LIBRARIES = -lrtx -lrtos 
LINKER_SCRIPT = ./mbed/targets/cmsis/TARGET_NXP/TARGET_LPC176X/TOOLCHAIN_GCC_ARM/LPC1768.ld

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size 


CPU = -mcpu=cortex-m3 -mthumb 
CC_FLAGS = $(CPU) -c -g -fno-common -fmessage-length=0 -Wall -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -MMD -MP
CC_SYMBOLS = -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_CORTEX_M -DTARGET_NXP -DTARGET_LPC176X -DTARGET_MBED_LPC1768 -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 -DMBED_BUILD_TIMESTAMP=1476482609.32 -D__MBED__=1 

LD_FLAGS = $(CPU) -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float -Wl,--wrap,main -Wl,-Map=$(PROJECT).map,--cref
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif

.PHONY: all clean lst size

all: $(PROJECT).bin $(PROJECT).hex size


clean:
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)


.asm.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.s.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.S.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++11 -fno-rtti $(INCLUDE_PATHS) -o $@ $<




$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)

	@echo ""
	@echo "*****"
	@echo "***** You must modify vector checksum value in *.bin and *.hex files."
	@echo "*****"
	@echo ""


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)


